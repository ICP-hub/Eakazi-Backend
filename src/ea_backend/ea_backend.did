type Course = record {
  id : text;
  title : text;
  creator : principal;
  creator_fullname : text;
  applicants : vec principal;
};
type Jobs = record {
  id : text;
  title : text;
  creator : principal;
  creator_fullname : text;
  applicants : vec principal;
};
type Profile = record {
  id : text;
  occupation : text;
  resume : vec nat8;
  role : Roles;
  description : text;
  email : text;
  fullname : text;
  keywords : vec text;
  organization : text;
  skills : vec text;
  location : text;
};
type CheckUser = record {
  user : principal;
};
type Roles = variant { TRAINEE; TRAINER; ADMIN; EMPLOYER };
service : {
  applyCourse : (text) -> (opt Course);
  applyJobs : (text) -> (opt Jobs);
  checkUser : () -> (bool);
  createCourse : (text) -> (Course);
  createJob : (text) -> (Jobs);
  createUser : (text, text, text) -> (Profile);
  get : (text) -> (Profile) query;
  getAllCourses : () -> (vec Course) query;
  getAllJobs : () -> (vec Jobs) query;
  getCourse : (text) -> (Jobs) query;
  getSelf : () -> (Profile) query;
  search : (text) -> (opt Profile) query;
  update : (Profile) -> ();
  getFullName : () -> (text) query;
  getRole : () -> (text) query;
  getCoursesByCreator : () -> (vec Course);
  getJobsByCreator : () -> (vec Jobs);
  checkAppliedJob : (text) -> (bool) query;
  checkAppliedCourse : (text) -> (bool) query;
  getJobsAppliedCount : () -> (nat32) query;
  getCoursesRegisteredByUser : () -> (vec Course);
};
